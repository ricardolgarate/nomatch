rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if user is admin
    function isAdmin() {
      return request.auth != null && 
             request.auth.token.email == 'ricardo.lgarate@gmail.com';
      // To add more admins, use: request.auth.token.email in ['email1@gmail.com', 'email2@gmail.com']
    }
    
    // Products - public read, admin write
    match /products/{productId} {
      allow read: if true;  // Anyone can view products
      allow write: if isAdmin();  // Only admins can modify
    }
    
    // Analytics Sessions - anyone can write (for tracking), admin can read
    match /analytics_sessions/{sessionId} {
      allow read: if isAdmin();  // Only admins can view analytics
      allow create: if true;  // Anyone can create sessions (tracking)
      allow update: if true;  // Anyone can update their session
      allow delete: if isAdmin();  // Only admins can delete
    }
    
    // Coupons - public read (for validation), admin write
    match /coupons/{couponId} {
      allow read: if true;  // Anyone can read (needed for validation)
      allow write: if isAdmin();  // Only admins can create/modify coupons
    }
    
    // Orders - admin read, server write (via Admin SDK)
    match /orders/{orderId} {
      allow read: if isAdmin();  // Admins can view orders
      allow write: if false;  // Only server (Admin SDK) can write
      // Note: Firebase Admin SDK bypasses these rules, so webhooks can still write
    }
    
    // Failed Payments - admin only
    match /failed_payments/{paymentId} {
      allow read: if isAdmin();
      allow write: if false;  // Only server (Admin SDK) can write
    }
  }
}

